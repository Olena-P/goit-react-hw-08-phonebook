{"version":3,"file":"static/js/386.596909a7.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Contacts/ContactForm.jsx","components/Contacts/ContactItem.jsx","components/Contacts/ContactList.jsx","components/Contacts/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (items, filter) => {\n    return items.filter(item =>\n      item.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { selectContacts } from \"../../redux/contacts/selectors\";\nimport { addContact } from \"../../redux/contacts/operations\";\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .min(2, \"Name must be at least 2 characters\")\n      .matches(\n        /^[A-Za-z\\s]+$/,\n        \"Invalid name format. Only letters and spaces are allowed.\"\n      )\n      .required(\"Name is required\"),\n    number: Yup.string()\n      .matches(/^\\d{10}$/, \"Phone number must be 10 digits\")\n      .required(\"Phone number is required\"),\n  });\n\n  const contacts = useSelector(selectContacts);\n\n  return (\n    <Formik\n      initialValues={{ name: \"\", number: \"\" }}\n      validationSchema={validationSchema}\n      onSubmit={(values, actions) => {\n        const isExist = contacts.some(\n          (contact) => contact.name.toLowerCase() === values.name.toLowerCase()\n        );\n\n        if (isExist) {\n          actions.resetForm();\n          return alert(`${values.name} is already in contacts.`);\n        }\n        dispatch(addContact(values));\n        actions.resetForm();\n      }}\n    >\n      <Form\n        style={{\n          maxWidth: \"300px\",\n          margin: \"auto\",\n          padding: \"20px\",\n          boxShadow: \"0 0 10px rgba(0, 0, 0, 0.1)\",\n          borderRadius: \"8px\",\n          backgroundColor: \"#ffffff\",\n        }}\n      >\n        <Field\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          style={{\n            width: \"100%\",\n            padding: \"8px\",\n            marginBottom: \"10px\",\n            boxSizing: \"border-box\",\n          }}\n        />\n        <ErrorMessage\n          name=\"name\"\n          component=\"div\"\n          style={{ color: \"red\", marginBottom: \"10px\" }}\n        />\n\n        <Field\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Number\"\n          style={{\n            width: \"100%\",\n            padding: \"8px\",\n            marginBottom: \"20px\",\n            boxSizing: \"border-box\",\n          }}\n        />\n        <ErrorMessage\n          name=\"number\"\n          component=\"div\"\n          style={{ color: \"red\", marginBottom: \"20px\" }}\n        />\n\n        <button\n          type=\"submit\"\n          style={{\n            background: \"#007bff\",\n            color: \"white\",\n            padding: \"10px\",\n            cursor: \"pointer\",\n            borderRadius: \"5px\",\n            border: \"none\",\n          }}\n        >\n          Add contact\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"../../redux/contacts/operations\";\n\nconst ContactItem = ({ contact: { name, number, id } }) => {\n  const dispatch = useDispatch();\n  return (\n    <li\n      style={{\n        marginBottom: \"10px\",\n        padding: \"10px\",\n        border: \"1px solid #ddd\",\n        borderRadius: \"5px\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        background: \"#ffffff\",\n      }}\n    >\n      <div>\n        <strong>{name}</strong>: {number}\n      </div>\n      <button\n        type=\"button\"\n        onClick={() => dispatch(deleteContact(id))}\n        style={{\n          background: \"#dc3545\",\n          color: \"#fff\",\n          padding: \"5px 10px\",\n          borderRadius: \"3px\",\n          border: \"none\",\n          cursor: \"pointer\",\n        }}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectVisibleContacts } from \"../../redux/contacts/selectors\";\nimport ContactItem from \"./ContactItem\";\n\nconst ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ul style={{ listStyle: \"none\", padding: 0 }}>\n      {contacts.map((contact) => (\n        <ContactItem\n          key={contact.id}\n          contact={contact}\n          style={{\n            borderBottom: \"1px solid #ddd\",\n            padding: \"10px\",\n            marginBottom: \"5px\",\n          }}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectFilter } from \"../../redux/contacts/selectors\";\nimport { changeFilter } from \"../../redux/contacts/filterSlice\";\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  return (\n    <div style={{ marginBottom: \"20px\", textAlign: \"center\" }}>\n      <label\n        htmlFor=\"filter\"\n        style={{ marginRight: \"10px\", fontWeight: \"bold\" }}\n      >\n        Filter contacts by name:\n      </label>\n      <input\n        id=\"filter\"\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={(e) => dispatch(changeFilter(e.target.value))}\n        style={{\n          padding: \"8px\",\n          borderRadius: \"5px\",\n          border: \"1px solid #ddd\",\n          outline: \"none\",\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from \"../redux/contacts/operations\";\nimport { selectError, selectIsLoading } from \"../redux/contacts/selectors\";\nimport ContactForm from \"../components/Contacts/ContactForm\";\nimport ContactList from \"../components/Contacts/ContactList\";\nimport Filter from \"../components/Contacts/Filter\";\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","item","name","toLowerCase","includes","ContactForm","dispatch","useDispatch","validationSchema","Yup","shape","min","matches","required","number","useSelector","_jsx","Formik","initialValues","onSubmit","values","actions","some","contact","resetForm","alert","concat","addContact","children","_jsxs","Form","style","maxWidth","margin","padding","boxShadow","borderRadius","backgroundColor","Field","type","placeholder","width","marginBottom","boxSizing","ErrorMessage","component","color","background","cursor","border","_ref","id","display","justifyContent","alignItems","onClick","deleteContact","ContactList","listStyle","map","ContactItem","borderBottom","Filter","textAlign","htmlFor","marginRight","fontWeight","value","onChange","e","changeFilter","target","outline","Contacts","useEffect","fetchContacts"],"sourceRoot":""}